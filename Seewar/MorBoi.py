import tkinter as tk
from tkinter import ttk, messagebox
import sqlite3
import subprocess
from os import path, makedirs
from PIL import Image, ImageTk, ImageSequence
from datetime import datetime
import os

# –ö–ª–∞—Å—Å –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ –≥–∏—Ñ–∫–∏
class AnimatedGIF(tk.Label):
    def __init__(self, master, path, delay=100):
        im = Image.open(path)
        self.frames = [ImageTk.PhotoImage(frame.copy()) for frame in ImageSequence.Iterator(im)]
        self.frame_index = 0
        self.delay = delay
        super().__init__(master, image=self.frames[0])
        self.after(self.delay, self.animate)

    def animate(self):
        self.frame_index = (self.frame_index + 1) % len(self.frames)
        self.config(image=self.frames[self.frame_index])
        self.after(self.delay, self.animate)

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∏–≥—Ä—ã –≤ —Ñ–∞–π–ª
def save_game_log(player_name, map_size, result, duration_seconds):
    if not os.path.exists("game_logs"):
        os.makedirs("game_logs")

    now = datetime.now()
    filename = f"{player_name}_{now.strftime('%Y-%m-%d_%H-%M-%S')}.txt"
    filepath = os.path.join("game_logs", filename)

    with open(filepath, "w", encoding="utf-8") as f:
        f.write(f"–ò–≥—Ä–æ–∫: {player_name}\n")
        f.write(f"–†–∞–∑–º–µ—Ä –∫–∞—Ä—Ç—ã: {map_size}\n")
        f.write(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {result}\n")
        f.write(f"–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {duration_seconds} —Å–µ–∫.\n")
        f.write(f"–î–∞—Ç–∞: {now.strftime('%Y-%m-%d %H:%M:%S')}\n")

# –û–∫–Ω–æ –Ω–æ–≤–æ–π –∏–≥—Ä—ã
def open_game_window():
    root.withdraw()

    game_win = tk.Toplevel()
    game_win.title("–ú–æ—Ä—Å–∫–æ–π –±–æ–π ‚Äî –ò–≥—Ä–∞")
    game_win.geometry("800x800")
    game_win.configure(bg="#cceeff")

    # –ò–º—è –∏–≥—Ä–æ–∫–∞
    tk.Label(game_win, text="–í–≤–µ–¥–∏—Ç–µ –∏–º—è:", font=("Arial", 14), bg="#cceeff").place(x=50, y=30)
    name_var = tk.StringVar()
    name_entry = tk.Entry(game_win, textvariable=name_var, font=("Arial", 14), width=25)
    name_entry.place(x=200, y=30)

    # –†–∞–∑–º–µ—Ä –∫–∞—Ä—Ç—ã
    tk.Label(game_win, text="–†–∞–∑–º–µ—Ä –∫–∞—Ä—Ç—ã:", font=("Arial", 14), bg="#cceeff").place(x=50, y=90)
    map_size_var = tk.StringVar(value="—Å—Ä–µ–¥–Ω–∏–π")
    sizes = [("–ú–∞–ª–µ–Ω—å–∫–∏–π", "–º–∞–ª–µ–Ω—å–∫–∏–π"), ("–°—Ä–µ–¥–Ω–∏–π", "—Å—Ä–µ–¥–Ω–∏–π"), ("–ë–æ–ª—å—à–æ–π", "–±–æ–ª—å—à–æ–π")]
    x_pos = 200
    for text, value in sizes:
        tk.Radiobutton(game_win, text=text, variable=map_size_var, value=value,
                       font=("Arial", 12), bg="#cceeff").place(x=x_pos, y=90)
        x_pos += 120

    # –í—Ä–µ–º—è
    tk.Label(game_win, text="–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –ø–æ –≤—Ä–µ–º–µ–Ω–∏:", font=("Arial", 14), bg="#cceeff").place(x=50, y=150)
    time_limit_var = tk.StringVar()
    time_combo = ttk.Combobox(game_win, textvariable=time_limit_var, font=("Arial", 12),
                              values=["30 —Å–µ–∫—É–Ω–¥", "1 –º–∏–Ω—É—Ç–∞", "2 –º–∏–Ω—É—Ç—ã", "5 –º–∏–Ω—É—Ç"])
    time_combo.place(x=280, y=150)
    time_combo.set("5 –º–∏–Ω—É—Ç")

    # –°—Ç–∞—Ä—Ç –∏–≥—Ä—ã
    def start_game():
        name = name_var.get().strip()
        if not name:
            messagebox.showerror("–û—à–∏–±–∫–∞", "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∏–º—è –∏–≥—Ä–æ–∫–∞.")
            return

        time_str = time_limit_var.get()
        time_seconds = 60
        if "30" in time_str:
            time_seconds = 30
        elif "2" in time_str:
            time_seconds = 120
        elif "5" in time_str:
            time_seconds = 300

        start_time = datetime.now()

        game_field = tk.Toplevel(game_win)
        game_field.title("–ü–æ–ª–µ –±–æ—è")
        game_field.geometry("700x700")
        game_field.configure(bg="#dff")

        tk.Label(game_field, text=f"–ò–≥—Ä–æ–∫: {name}", font=("Arial", 14), bg="#dff").pack(pady=10)

        timer_var = tk.StringVar(value=f"–û—Å—Ç–∞–ª–æ—Å—å: {time_seconds} —Å–µ–∫.")
        timer_label = tk.Label(game_field, textvariable=timer_var, font=("Arial", 14), bg="#dff")
        timer_label.pack()

        # –ò–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ
        grid_frame = tk.Frame(game_field, bg="#dff")
        grid_frame.pack(pady=20)
        buttons = []

        def on_cell_click(x, y):
            btn = buttons[x][y]
            btn.config(text="üí•", state="disabled")

        for i in range(10):
            row = []
            for j in range(10):
                btn = tk.Button(grid_frame, text="", width=3, height=1, font=("Arial", 12),
                                command=lambda x=i, y=j: on_cell_click(x, y))
                btn.grid(row=i, column=j, padx=1, pady=1)
                row.append(btn)
            buttons.append(row)

        # –û–±—Ä–∞—Ç–Ω—ã–π –æ—Ç—Å—á—ë—Ç
        def countdown(t):
            if t <= 0:
                end_time = datetime.now()
                duration = (end_time - start_time).seconds
                save_game_log(name, map_size_var.get(), "–ü—Ä–æ–∏–≥—Ä—ã—à (–≤—Ä–µ–º—è –≤—ã—à–ª–æ)", duration)
                messagebox.showwarning("–í—Ä–µ–º—è –≤—ã—à–ª–æ", "–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏! ‚è∞")
                game_field.destroy()
                return
            timer_var.set(f"–û—Å—Ç–∞–ª–æ—Å—å: {t} —Å–µ–∫.")
            game_field.after(1000, countdown, t - 1)

        countdown(time_seconds)

    # –ö–Ω–æ–ø–∫–∞ —Å—Ç–∞—Ä—Ç–∞
    start_btn = tk.Button(game_win, text="–ù–∞—á–∞—Ç—å –∏–≥—Ä—É", font=("Arial", 14), command=start_game)
    start_btn.place(x=330, y=220)

    # –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥
    def back_to_menu():
        game_win.destroy()
        root.deiconify()

    back_btn = tk.Button(game_win, text="–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", font=("Arial", 14), command=back_to_menu)
    back_btn.place(x=337, y=700)

# –ì–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ
root = tk.Tk()
root.title("–ú–æ—Ä—Å–∫–æ–π –±–æ–π")
root.geometry("640x512")

gif = AnimatedGIF(root, "Seewar/background.gif", delay=100)
gif.place(x=0, y=0, relwidth=1, relheight=1)

label = tk.Label(root, text="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–æ—Ä—Å–∫–æ–π –±–æ–π!", font=("Arial", 18), bg="#cceeff")
label.pack(pady=10)

btn_start = tk.Button(root, text="–°—Ç–∞—Ä—Ç", font=("Georgia", 16), bg="white", command=open_game_window)
btn_start.pack(pady=20)

btn_history = tk.Button(root, text="–ò—Å—Ç–æ—Ä–∏—è", font=("Georgia", 16), bg="white")
btn_history.pack(pady=10)

btn_exit = tk.Button(root, text="–í—ã—Ö–æ–¥", font=("Georgia", 16), bg="white", command=root.destroy)
btn_exit.pack(pady=10)

root.mainloop()
