import tkinter as tk
from tkinter import filedialog, messagebox
import smtplib
import ssl
import json
from email.message import EmailMessage
import imghdr
import threading

file_paths = []  # –°–ø–∏—Å–æ–∫ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—É—Ç–µ–π –≤–ª–æ–∂–µ–Ω–∏–π

    #----------------------------------------------------------------------------------------------------------------------#

def –≤—ã–±—Ä_—Ñ–∞–π–ª():
    global file_paths
    files = filedialog.askopenfilenames(filetypes=[("All Files", "*.*")])
    file_paths.extend(files)
    l_dobavit.config(text=f"üìé {len(file_paths)} —Ñ–∞–π–ª–æ–≤ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–æ")
    
    #----------------------------------------------------------------------------------------------------------------------#

def –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä(): # –§—É–Ω–∫—Ü–∏—è –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–∏—Å—å–º–∞ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π
    
    preview_text = f"–ö–æ–º—É: {entry_email.get()}\n–¢–µ–º–∞: {entry_teema.get()}\n\n–¢–µ–∫—Å—Ç –ø–∏—Å—å–º–∞:\n{entry_kiri.get('1.0', tk.END).strip()}\n\n–í–ª–æ–∂–µ–Ω–∏—è: {len(file_paths)} —Ñ–∞–π–ª–æ–≤"
    messagebox.showinfo("–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä", preview_text)
    
    #----------------------------------------------------------------------------------------------------------------------#

def —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å_—á–µ—Ä–Ω–æ–≤–∏–∫(): # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —á–µ—Ä–Ω–æ–≤–∏–∫–∞ –ø–∏—Å—å–º–∞
    
    draft = {
        "email": entry_email.get(),
        "subject": entry_teema.get(),
        "body": entry_kiri.get("1.0", tk.END).strip(),
        "attachments": file_paths
    }
    with open("draft.json", "w", encoding="utf-8") as f:
        json.dump(draft, f, ensure_ascii=False, indent=4)
    messagebox.showinfo("–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ", "–ß–µ—Ä–Ω–æ–≤–∏–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω!")
    
    #----------------------------------------------------------------------------------------------------------------------#

def –∑–∞–≥—Ä—É–∑–∏—Ç—å_—á–µ—Ä–Ω–æ–≤–∏–∫(): # –ó–∞–≥—Ä—É–∑–∫–∞ —á–µ—Ä–Ω–æ–≤–∏–∫–∞ –ø–∏—Å—å–º–∞
    
    try:
        with open("draft.json", "r", encoding="utf-8") as f:
            draft = json.load(f)
            entry_email.delete(0, tk.END)
            entry_email.insert(0, draft.get("email", ""))
            entry_teema.delete(0, tk.END)
            entry_teema.insert(0, draft.get("subject", ""))
            entry_kiri.delete("1.0", tk.END)
            entry_kiri.insert("1.0", draft.get("body", ""))
            global file_paths
            file_paths = draft.get("attachments", [])
            l_dobavit.config(text=f"üìé {len(file_paths)} —Ñ–∞–π–ª–æ–≤ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–æ")
    except FileNotFoundError:
        messagebox.showerror("–û—à–∏–±–∫–∞", "–ß–µ—Ä–Ω–æ–≤–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        
    #----------------------------------------------------------------------------------------------------------------------#

def –æ—Ç–ø—Ä–∞–≤–∫–∞_–ø–∏—Å—å–º–∞(): # –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∏—Å—å–º–∞ —á–µ—Ä–µ–∑ SMTP
    
    try:
        loading_label.config(text="–û—Ç–ø—Ä–∞–≤–∫–∞... ‚è≥")  # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
        okno.update_idletasks()
        
        smtp_server = "smtp.gmail.com"
        port = 587
        sender_email = "nikita.konkin12345@gmail.com"
        password = "fsjx obew grfg jdqd"
        
        –∫–æ–º—É = [email.strip() for email in entry_email.get().split(',') if email.strip()]
        —Ç–µ–º–∞ = entry_teema.get()
        –ø–∏—Å—å–º–æ = entry_kiri.get("1.0", tk.END).strip()
        
        if not –∫–æ–º—É or not —Ç–µ–º–∞ or not –ø–∏—Å—å–º–æ:
            messagebox.showerror("–û—à–∏–±–∫–∞", "–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!")
            return
        
        msg = EmailMessage()
        msg['Subject'] = —Ç–µ–º–∞
        msg['From'] = sender_email
        msg['Bcc'] = ", ".join(–∫–æ–º—É)  # –ò—Å–ø–æ–ª—å–∑—É–µ–º Bcc –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–µ—Å–∫–æ–ª—å–∫–∏–º –∞–¥—Ä–µ—Å–∞—Ç–∞–º
        msg.set_content(–ø–∏—Å—å–º–æ)
        
        for file_path in file_paths:
            try:
                with open(file_path, "rb") as fp:
                    file_data = fp.read()
                    file_type = imghdr.what(None, file_data) or "octet-stream"
                    msg.add_attachment(file_data, maintype="application", subtype=file_type, filename=file_path.split("/")[-1])
            except Exception as e:
                messagebox.showerror("–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ñ–∞–π–ª: {e}")
                return
        
        context = ssl.create_default_context()
        server = smtplib.SMTP(smtp_server, port)
        server.starttls(context=context)
        server.login(sender_email, password)
        server.send_message(msg)
        server.quit()
        
        loading_label.config(text="")  # –û—á–∏—Å—Ç–∫–∞ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
        messagebox.showinfo("–£—Å–ø–µ—Ö", "–ü–∏—Å—å–º–æ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤—Å–µ–º –∞–¥—Ä–µ—Å–∞—Ç–∞–º!")
    except Exception as e:
        loading_label.config(text="")
        messagebox.showerror("–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–∏—Å—å–º–∞: {e}")

    #----------------------------------------------------------------------------------------------------------------------#

def –æ—Ç–ø—Ä–∞–≤–∏—Ç—å_–≤_–ø–æ—Ç–æ–∫–µ(): #
    threading.Thread(target=–æ—Ç–ø—Ä–∞–≤–∫–∞_–ø–∏—Å—å–º–∞, daemon=True).start()
    
    #----------------------------------------------------------------------------------------------------------------------#

def –æ—á–∏—Å—Ç–∏—Ç—å_–ø–æ–ª—è(): # 
    entry_email.delete(0, tk.END)
    entry_teema.delete(0, tk.END)
    entry_kiri.delete("1.0", tk.END)
    global file_paths
    file_paths = []
    l_dobavit.config(text="–§–∞–π–ª –Ω–µ –≤—ã–±—Ä–∞–Ω")

# –°–æ–∑–¥–∞–Ω–∏–µ –æ–∫–Ω–∞
okno = tk.Tk()
okno.title("E-kirja saatmine")
okno.geometry("650x450")
okno.configure(bg="#F0F0F0")
loading_label = tk.Label(okno, text="", font=("Arial", 12), fg="blue")
loading_label.grid(row=5, column=0, columnspan=2, pady=5)

    #----------------------------------------------------------------------------------------------------------------------#

# –ü–æ–ª—è –≤–≤–æ–¥–∞
labels = ["EMAIL", "TEEMA", "LISA", "KIRI"]

for i, text in enumerate(labels):

    tk.Label(okno, text=text, font=("Arial", 12), bg="green", fg="white", padx=10, pady=5).grid(row=i, column=0, sticky="ew")

entry_email = tk.Entry(okno, width=50)
entry_email.grid(row=0, column=1, padx=10, pady=5)

entry_teema = tk.Entry(okno, width=50)
entry_teema.grid(row=1, column=1, padx=10, pady=5)

l_dobavit = tk.Label(okno, text="–§–∞–π–ª –Ω–µ –≤—ã–±—Ä–∞–Ω")
l_dobavit.grid(row=2, column=1, padx=10, pady=5)

entry_kiri = tk.Text(okno, width=50, height=5)
entry_kiri.grid(row=3, column=1, padx=10, pady=5)

    #----------------------------------------------------------------------------------------------------------------------#

# –§—Ä–µ–π–º –¥–ª—è –∫–Ω–æ–ø–æ–∫
frame_buttons = tk.Frame(okno)
frame_buttons.grid(row=4, column=0, columnspan=2, pady=10)

btn_lisa = tk.Button(frame_buttons, text="LISA FAIL", command=–≤—ã–±—Ä_—Ñ–∞–π–ª, bg="green", fg="white")
btn_lisa.pack(side=tk.LEFT, padx=5)

btn_preview = tk.Button(frame_buttons, text="PREVIEW", command=–ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä, bg="blue", fg="white")
btn_preview.pack(side=tk.LEFT, padx=5)

btn_save = tk.Button(frame_buttons, text="–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —á–µ—Ä–Ω–æ–≤–∏–∫", command=—Å–æ—Ö—Ä–∞–Ω–∏—Ç—å_—á–µ—Ä–Ω–æ–≤–∏–∫, bg="orange", fg="white")
btn_save.pack(side=tk.LEFT, padx=5)

btn_load = tk.Button(frame_buttons, text="–ó–∞–≥—Ä—É–∑–∏—Ç—å —á–µ—Ä–Ω–æ–≤–∏–∫", command=–∑–∞–≥—Ä—É–∑–∏—Ç—å_—á–µ—Ä–Ω–æ–≤–∏–∫, bg="purple", fg="white")
btn_load.pack(side=tk.LEFT, padx=5)

btn_clear = tk.Button(frame_buttons, text="Puhasta", command=–æ—á–∏—Å—Ç–∏—Ç—å_–ø–æ–ª—è, bg="red", fg="white")
btn_clear.pack(side=tk.LEFT, padx=5)

btn_saada = tk.Button(frame_buttons, text="SAADA üì®", command=–æ—Ç–ø—Ä–∞–≤–∏—Ç—å_–≤_–ø–æ—Ç–æ–∫–µ, bg="green", fg="white", font=("Arial", 12))
btn_saada.pack(side=tk.LEFT, padx=5)



okno.mainloop()
